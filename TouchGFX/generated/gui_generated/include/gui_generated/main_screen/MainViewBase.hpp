/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MAINVIEWBASE_HPP
#define MAINVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/main_screen/MainPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TiledImage.hpp>
#include <touchgfx/containers/clock/DigitalClock.hpp>
#include <touchgfx/containers/clock/AnalogClock.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class MainViewBase : public touchgfx::View<MainPresenter>
{
public:
    MainViewBase();
    virtual ~MainViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::TiledImage background;
    touchgfx::DigitalClock digitalClock;
    touchgfx::AnalogClock analogClock;
    touchgfx::BoxWithBorder boxWithBorder1_2_2_1;
    touchgfx::BoxWithBorder boxWithBorder1_2_2;
    touchgfx::BoxWithBorder boxWithBorder1_2_1;
    touchgfx::BoxWithBorder boxWithBorder1_2;
    touchgfx::TextArea IndiceUmidita;
    touchgfx::TextArea IndiceNox;
    touchgfx::TextArea IndiceTemperatura;
    touchgfx::TextArea IndiceVoc;
    touchgfx::TextAreaWithOneWildcard Temperature;
    touchgfx::TextAreaWithOneWildcard Humitidy;
    touchgfx::TextAreaWithOneWildcard Voc;
    touchgfx::TextAreaWithOneWildcard Nox;
    touchgfx::TextArea Measurements;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEMPERATURE_SIZE = 10;
    touchgfx::Unicode::UnicodeChar TemperatureBuffer[TEMPERATURE_SIZE];
    static const uint16_t HUMITIDY_SIZE = 10;
    touchgfx::Unicode::UnicodeChar HumitidyBuffer[HUMITIDY_SIZE];
    static const uint16_t VOC_SIZE = 10;
    touchgfx::Unicode::UnicodeChar VocBuffer[VOC_SIZE];
    static const uint16_t NOX_SIZE = 10;
    touchgfx::Unicode::UnicodeChar NoxBuffer[NOX_SIZE];

private:

};

#endif // MAINVIEWBASE_HPP
