/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/main_screen/MainViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MainViewBase::MainViewBase()
{
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background.setBitmap(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_BACKGROUNDS_480X272_WAVES_ID));
    background.setPosition(0, 0, 480, 272);
    background.setOffset(0, 0);
    add(background);

    digitalClock.setPosition(32, 41, 150, 30);
    digitalClock.setColor(touchgfx::Color::getColorFromRGB(122, 122, 122));
    digitalClock.setTypedText(touchgfx::TypedText(T_DIGITAL_CLOCK));
    digitalClock.displayLeadingZeroForHourIndicator(true);
    digitalClock.setDisplayMode(touchgfx::DigitalClock::DISPLAY_24_HOUR);
    digitalClock.setTime24Hour(10, 10, 0);
    digitalClock.setVisible(false);
    add(digitalClock);

    analogClock.setXY(202, 15);
    analogClock.setBackground(BITMAP_CLOCKS_BACKGROUNDS_CLOCK_CLASSIC_BACKGROUND_ID, 116, 116);
    analogClock.setupHourHand(BITMAP_CLOCKS_HANDS_CLOCK_CLASSIC_HOUR_HAND_ID, 2, 44);
    analogClock.setHourHandMinuteCorrection(true);
    analogClock.setupMinuteHand(BITMAP_CLOCKS_HANDS_CLOCK_CLASSIC_MINUTE_HAND_ID, 2, 64);
    analogClock.setMinuteHandSecondCorrection(false);
    analogClock.setupSecondHand(BITMAP_CLOCKS_HANDS_CLOCK_CLASSIC_SECOND_HAND_ID, 4, 79);
    analogClock.initializeTime24Hour(10, 10, 0);
    analogClock.setAnimation(10, touchgfx::EasingEquations::cubicEaseInOut);
    analogClock.setVisible(false);
    add(analogClock);

    boxWithBorder1_2_2_1.setPosition(56, 68, 160, 83);
    boxWithBorder1_2_2_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    boxWithBorder1_2_2_1.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxWithBorder1_2_2_1.setBorderSize(5);
    add(boxWithBorder1_2_2_1);

    boxWithBorder1_2_2.setPosition(268, 68, 160, 83);
    boxWithBorder1_2_2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    boxWithBorder1_2_2.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxWithBorder1_2_2.setBorderSize(5);
    add(boxWithBorder1_2_2);

    boxWithBorder1_2_1.setPosition(56, 168, 160, 83);
    boxWithBorder1_2_1.setColor(touchgfx::Color::getColorFromRGB(191, 196, 149));
    boxWithBorder1_2_1.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxWithBorder1_2_1.setBorderSize(5);
    add(boxWithBorder1_2_1);

    boxWithBorder1_2.setPosition(268, 168, 160, 83);
    boxWithBorder1_2.setColor(touchgfx::Color::getColorFromRGB(88, 169, 199));
    boxWithBorder1_2.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxWithBorder1_2.setBorderSize(5);
    add(boxWithBorder1_2);

    IndiceUmidita.setXY(306, 78);
    IndiceUmidita.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    IndiceUmidita.setLinespacing(0);
    IndiceUmidita.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FUYI));
    add(IndiceUmidita);

    IndiceNox.setXY(296, 176);
    IndiceNox.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    IndiceNox.setLinespacing(0);
    IndiceNox.setTypedText(touchgfx::TypedText(T___SINGLEUSE_25EE));
    add(IndiceNox);

    IndiceTemperatura.setXY(80, 78);
    IndiceTemperatura.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    IndiceTemperatura.setLinespacing(0);
    IndiceTemperatura.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X7N9));
    add(IndiceTemperatura);

    IndiceVoc.setXY(86, 176);
    IndiceVoc.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    IndiceVoc.setLinespacing(0);
    IndiceVoc.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z463));
    add(IndiceVoc);

    Temperature.setXY(93, 109);
    Temperature.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Temperature.setLinespacing(0);
    TemperatureBuffer[0] = 0;
    Temperature.setWildcard(TemperatureBuffer);
    Temperature.resizeToCurrentText();
    Temperature.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6A55));
    add(Temperature);

    Humitidy.setXY(293, 111);
    Humitidy.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Humitidy.setLinespacing(0);
    HumitidyBuffer[0] = 0;
    Humitidy.setWildcard(HumitidyBuffer);
    Humitidy.resizeToCurrentText();
    Humitidy.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DWWZ));
    add(Humitidy);

    Voc.setXY(80, 209);
    Voc.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Voc.setLinespacing(0);
    VocBuffer[0] = 0;
    Voc.setWildcard(VocBuffer);
    Voc.resizeToCurrentText();
    Voc.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UIA2));
    add(Voc);

    Nox.setXY(286, 209);
    Nox.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Nox.setLinespacing(0);
    NoxBuffer[0] = 0;
    Nox.setWildcard(NoxBuffer);
    Nox.resizeToCurrentText();
    Nox.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T6M2));
    add(Nox);

    Measurements.setXY(153, 14);
    Measurements.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Measurements.setLinespacing(0);
    Measurements.setTypedText(touchgfx::TypedText(T___SINGLEUSE_QJA2));
    add(Measurements);
}

MainViewBase::~MainViewBase()
{

}

void MainViewBase::setupScreen()
{

}
